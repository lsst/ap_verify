# Gen 3 pipeline for ap_verify
# This concatenates various lsst.verify metrics to an AP pipeline

description: Fully instrumented AP pipeline with fakes
imports:
  - location: $AP_VERIFY_DIR/pipelines/ApVerify.yaml
    exclude:
      - fracDiaSourcesToSciSources  # Selectively turn off this task's contracts
  - location: $AP_VERIFY_DIR/pipelines/MetricsForFakes.yaml
parameters:
  fakesType: fakes_
tasks:
  createFakes:
    class: lsst.ap.pipe.createApFakes.CreateRandomApFakesTask
    config:
      magMin: 20
      magMax: 26
      fakeDensity: 2000
      connections.fakesType: parameters.fakesType
  coaddFakes:
    class: lsst.pipe.tasks.insertFakes.InsertFakesTask
    config:
      doSubSelectSources: True
      select_col: "isTemplateSource"
      connections.coaddName: parameters.coaddName
      connections.fakesType: parameters.fakesType
  singleFrameWithFakes:
    class: lsst.pipe.tasks.processCcdWithFakes.ProcessCcdWithVariableFakesTask
    config:
      connections.fakesType: parameters.fakesType
      insertFakes.doSubSelectSources: True
      insertFakes.select_col: "isVisitSource"
  retrieveTemplateWithFakes:
    class: lsst.ip.diffim.getTemplate.GetTemplateTask
    config:
      connections.coaddName: parameters.coaddName
      connections.fakesType: parameters.fakesType

  # Contracts require imageDifference, transformDiaSrc, and diaPipe to have matching configs.
  # Since diaPipe must include fakes (see below), do non-fakes processing with non-standard names.
  imageDifferenceNoFakes:
    class: lsst.pipe.tasks.imageDifference.ImageDifferenceFromTemplateTask
    config:
      doWriteWarpedExp: True       # Required for packaging alerts in diaPipe
      doSkySources: True
      coaddName: parameters.coaddName
      connections.coaddName: parameters.coaddName
  imageDifference:
    class: lsst.pipe.tasks.imageDifference.ImageDifferenceFromTemplateTask
    config:
      doWriteWarpedExp: True       # Required for packaging alerts in diaPipe
      connections.fakesType: parameters.fakesType
  transformDiaSrcCat:
    class: lsst.ap.association.TransformDiaSourceCatalogTask
    config:
      connections.fakesType: parameters.fakesType
  # Can't have separate with- and without-fakes runs for diaPipe, because there's only one APDB
  diaPipe:
    class: lsst.ap.association.DiaPipelineTask
    config:
      doWriteAssociatedSources: True
      connections.fakesType: parameters.fakesType
  fakesMatcher:
    class: lsst.pipe.tasks.matchFakes.MatchVariableFakesTask
    config:
      matchDistanceArcseconds: 0.1
      connections.coaddName: parameters.coaddName
      connections.fakesType: parameters.fakesType
  fracDiaSourcesToSciSources:
    # Uses output of imageDifferenceNoFakes
    class: lsst.ip.diffim.metrics.FractionDiaSourcesToSciSourcesMetricTask
    config:
      connections.coaddName: parameters.coaddName
  timing_imageDifference:
    class: lsst.verify.tasks.commonMetrics.TimingMetricTask
    config:
      connections.labelName: imageDifferenceNoFakes
      target: imageDifferenceNoFakes.run
  timing_imageDifference_astrometer:
    class: lsst.verify.tasks.commonMetrics.TimingMetricTask
    config:
      connections.labelName: imageDifferenceNoFakes
      target: imageDifferenceNoFakes:astrometer.loadAndMatch
  timing_imageDifference_register:
    class: lsst.verify.tasks.commonMetrics.TimingMetricTask
    config:
      connections.labelName: imageDifferenceNoFakes
      target: imageDifferenceNoFakes:register.run
  timing_imageDifference_subtract:
    class: lsst.verify.tasks.commonMetrics.TimingMetricTask
    config:
      connections.labelName: imageDifferenceNoFakes
      target: imageDifferenceNoFakes:subtract.subtractExposures
  timing_imageDifference_detection:
    class: lsst.verify.tasks.commonMetrics.TimingMetricTask
    config:
      connections.labelName: imageDifferenceNoFakes
      target: imageDifferenceNoFakes:detection.run
  timing_imageDifference_measurement:
    class: lsst.verify.tasks.commonMetrics.TimingMetricTask
    config:
      connections.labelName: imageDifferenceNoFakes
      target: imageDifferenceNoFakes:measurement.run
subsets:
  apPipe:
    subset:
      - isr
      - characterizeImage
      - calibrate
      - retrieveTemplate
      - imageDifferenceNoFakes
    description: >
      The AP pipeline without fakes. Only includes processing through
      image differencing.
  prepareFakes:
    subset:
      - createFakes
      - coaddFakes
    description: >
      Creation of fake sources.
  apPipeWithFakes:
    subset:
      - singleFrameWithFakes    # characterizeImage and calibrate with fakes
      - retrieveTemplateWithFakes
      - imageDifference
      - transformDiaSrcCat
      - diaPipe
      - fakesMatcher
    description: >
      The AP pipeline with fakes. Requires apPipe and prepareFakes subsets.
contracts:
  # Metric inputs must match pipeline outputs
  # Use of ConnectionsClass for templated fields is a workaround for DM-30210
  - createFakes.connections.ConnectionsClass(config=createFakes).fakeCat.name ==
      coaddFakes.connections.ConnectionsClass(config=coaddFakes).fakeCat.name
  - createFakes.connections.ConnectionsClass(config=createFakes).fakeCat.name ==
      singleFrameWithFakes.connections.ConnectionsClass(config=singleFrameWithFakes).fakeCats.name
  - coaddFakes.connections.ConnectionsClass(config=coaddFakes).imageWithFakes.name ==
      retrieveTemplateWithFakes.connections.ConnectionsClass(config=retrieveTemplateWithFakes).coaddExposures.name
  - singleFrameWithFakes.connections.ConnectionsClass(config=singleFrameWithFakes).outputExposure.name ==
      imageDifference.connections.ConnectionsClass(config=imageDifference).exposure.name
  - createFakes.connections.ConnectionsClass(config=createFakes).fakeCat.name ==
      fakesMatcher.connections.ConnectionsClass(config=fakesMatcher).fakeCats.name
  - imageDifference.connections.ConnectionsClass(config=imageDifference).subtractedExposure.name ==
      fakesMatcher.connections.ConnectionsClass(config=fakesMatcher).diffIm.name
  - diaPipe.connections.ConnectionsClass(config=diaPipe).associatedDiaSources.name ==
      fakesMatcher.connections.ConnectionsClass(config=fakesMatcher).associatedDiaSources.name
  - retrieveTemplateWithFakes.connections.ConnectionsClass(config=retrieveTemplateWithFakes).outputExposure.name ==
      imageDifference.connections.ConnectionsClass(config=imageDifference).inputTemplate.name
  - fakesMatcher.connections.ConnectionsClass(config=fakesMatcher).matchedDiaSources.name ==
      apFakesCompletenessMag20t22.connections.ConnectionsClass(config=apFakesCompletenessMag20t22).matchedFakes.name
  - fakesMatcher.connections.ConnectionsClass(config=fakesMatcher).matchedDiaSources.name ==
      apFakesCompletenessMag22t24.connections.ConnectionsClass(config=apFakesCompletenessMag22t24).matchedFakes.name
  - fakesMatcher.connections.ConnectionsClass(config=fakesMatcher).matchedDiaSources.name ==
      apFakesCompletenessMag24t26.connections.ConnectionsClass(config=apFakesCompletenessMag24t26).matchedFakes.name
  - imageDifferenceNoFakes.connections.ConnectionsClass(config=imageDifferenceNoFakes).diaSources.name ==
      fracDiaSourcesToSciSources.connections.ConnectionsClass(config=fracDiaSourcesToSciSources).diaSources.name
